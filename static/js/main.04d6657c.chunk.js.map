{"version":3,"sources":["components/Home.js","components/AddDeptModal.js","components/EditDeptModal.js","components/Department.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","Component","AddDeptModal","props","snackBarClose","event","setState","snackBarOpen","state","deps","gender","snackBarMsg","handleSubmit","bind","preventDefault","fetch","method","headers","body","JSON","stringify","name","target","DepartmentName","value","dateOfBirth","DepartmentDOB","sex","DepartmentGender","department","Department","salary","DepartmentSalary","resume","DepartmentResume","then","res","json","result","console","log","catch","err","this","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","message","id","action","IconButton","key","aria-label","color","onClick","Modal","size","aria-labelledby","centered","Header","closeButton","Title","Body","Row","Col","sm","Form","onSubmit","Group","controlId","Label","Control","type","required","placeholder","as","map","dep","Button","variant","Footer","onHide","EditDeptModal","Departmentid","disabled","defaultValue","dob","sal","file","refreshList","axios","get","response","dept","data","error","addModalShow","editModalShow","deptId","window","confirm","editModalClose","Table","striped","bordered","hover","_id","ButtonToolbar","deleteDepartment","show","Navigation","Navbar","bg","extends","Toggle","aria-controls","Collapse","Nav","to","App","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.04d6657c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nexport class Home extends Component {\n\n    render() {\n        return (\n            <div className='mt-5 d-flex justify-content-left'>\n            <h3>\n            Welcome to Nitya software.\n            This is CRUD apllication assignment for software Developent.\n            Back End is created on Node js\n            Database is MongoDB\n            back end is diployed on HEROKU\n            </h3>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton'\nexport class AddDeptModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            deps: ['HR', 'Designer', 'Developer', 'Sales'],gender:['male','female','other'], snackBarOpen: false, snackBarMsg: ''\n        };\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n    snackBarClose = (event) => {\n        this.setState({\n            snackBarOpen: false\n        })\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n        fetch('https://ntycrudapp.herokuapp.com/saveData', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name: event.target.DepartmentName.value,\n                dateOfBirth: event.target.DepartmentDOB.value,\n                sex: event.target.DepartmentGender.value,\n                department: event.target.Department.value,\n                salary: event.target.DepartmentSalary.value,\n                resume: event.target.DepartmentResume.value\n            })\n        }).then(res => {\n            res.json()\n        }).then(result => {\n            console.log(result)\n            this.setState({ snackBarOpen: true, snackBarMsg: 'Data has been saved successfully' })\n        }).catch(err => console.log(err));\n        this.setState({ snackBarOpen: true, snackBarMsg: \"Some error occurred\" })\n        // alert(event.target.DepartmentName.value)\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                <Snackbar\n                    anchorOrigin={{ vertical: 'cenet', horizontal: 'center' }}\n                    open={this.state.snackBarOpen}\n                    autoHideDuration={3000}\n                    onClose={this.snackBarClose}\n                    message={<span id=\"messege-id\">{this.state.snackBarMsg}</span>}\n                    action={[\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={this.snackBarClose}>\n                            x\n    </IconButton>\n                    ]}\n                />\n\n\n\n                <Modal\n                    {...this.props}\n                    size=\"lg\"\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n                    centered\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\n                            Add New Employee\n              </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n\n                        <Row>\n                            <Col sm={6}>\n                                <Form onSubmit={this.handleSubmit}>\n                                    <Form.Group controlId='DepartmentName'>\n                                        <Form.Label> Name</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            name=\"name\"\n                                            required\n                                            placeholder=\" Name\"\n                                        />\n                                    </Form.Group>\n\n                                    <Form.Group controlId='DepartmentDOB'>\n                                        <Form.Label>Date of Birth</Form.Label>\n                                        <Form.Control\n                                            type=\"date\"\n                                            name=\"dateOfBirth\"\n                                            required\n                                            placeholder=\"Date of Birth\"\n                                        />\n                                    </Form.Group>\n\n                                    <Form.Group controlId='DepartmentGender'>\n                                        <Form.Label>Gender</Form.Label>\n                                        <Form.Control as=\"select\">\n                                            {this.state.gender.map(gender=>\n                                                <option key={gender}>{gender}</option>\n                                                )}\n                                        </Form.Control>\n                                    </Form.Group>\n                                    <Form.Group controlId='Department'>\n                                        <Form.Label>Department</Form.Label>\n                                        <Form.Control as=\"select\">\n                                            {this.state.deps.map(dep=>\n                                                <option key={dep}>{dep}</option>\n                                                )}\n                                        </Form.Control>\n\n\n                                    </Form.Group>\n\n\n                                    <Form.Group controlId='DepartmentSalary'>\n                                        <Form.Label>Salary</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            name=\"salary\"\n                                            required\n                                            placeholder=\"Salary\"\n                                        />\n                                    </Form.Group>\n\n                                    <Form.Group controlId='DepartmentResume'>\n                                        <Form.Label>Resume</Form.Label>\n                                        <Form.Control\n                                            type=\"file\"\n                                            name=\"resume\"\n                                            required\n                                            placeholder=\"Resume\"\n                                        />\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Button variant=\"primary\" type=\"submit\">Add</Button>\n                                    </Form.Group>\n                                </Form>\n                            </Col>\n                        </Row>\n\n\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton'\nexport class EditDeptModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            snackBarOpen: false, snackBarMsg: ''\n        };\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n    snackBarClose = (event) => {\n        this.setState({\n            snackBarOpen: false\n        })\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n        try {\n            \n        } catch (error) {\n            \n        }\n        const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n        fetch(`https://ntycrudapp.herokuapp.com/update?_id=${event.target.Departmentid.value}`, {\n            method: 'PUT',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name: event.target.DepartmentName.value,\n                dateOfBirth: event.target.DepartmentDOB.value,\n                sex: event.target.DepartmentGender.value,\n                department: event.target.Department.value,\n                salary: event.target.DepartmentSalary.value,\n                resume: event.target.DepartmentResume.value\n            })\n        }).then(res => {\n            res.json()\n        }).then(result => {\n            console.log(result)\n            this.setState({ snackBarOpen: true, snackBarMsg: \"Update Successfully\" })\n        }).catch(err => console.log(err));\n        // this.setState({ snackBarOpen: true, snackBarMsg: \"Some error occurred\" })\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                <Snackbar\n                    anchorOrigin={{ vertical: 'cenet', horizontal: 'center' }}\n                    open={this.state.snackBarOpen}\n                    autoHideDuration={3000}\n                    onClose={this.snackBarClose}\n                    message={<span id=\"messege-id\">{this.state.snackBarMsg}</span>}\n                    action={[\n                        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={this.snackBarClose}>\n                            x\n    </IconButton>\n                    ]}\n                />\n                <Modal\n                    {...this.props}\n                    size=\"lg\"\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n                    centered\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\n                            Edit Employee\n              </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n\n                        <Row>\n                            <Col sm={6}>\n                                <Form onSubmit={this.handleSubmit}>\n                                    <Form.Group controlId='Departmentid'>\n                                        <Form.Label>Employee ID</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            name=\"depid\"\n                                            required\n                                            disabled\n                                            defaultValue={this.props.id}\n                                            placeholder=\"Department ID\"\n                                        />\n                                    </Form.Group>\n                                    <Form.Group controlId='DepartmentName'>\n                                        <Form.Label> Name</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            name=\"name\"\n                                            required\n                                            defaultValue={this.props.name}\n                                            placeholder=\"Department Name\"\n                                        />\n                                    </Form.Group>\n                                    <Form.Group controlId='DepartmentDOB'>\n                                        <Form.Label>Date of Birth</Form.Label>\n                                        <Form.Control\n                                            type=\"date\"\n                                            name=\"dateOfBirth\"\n                                            required\n                                            defaultValue={this.props.dob}\n\n                                            placeholder=\"Date of Birth\"\n                                        />\n                                    </Form.Group>\n\n                                    <Form.Group controlId='DepartmentGender'>\n                                        <Form.Label>Gender</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            name=\"sex\"\n                                            required\n                                            defaultValue={this.props.gender}\n\n                                            placeholder=\"Gender\"\n                                        />\n                                    </Form.Group>\n                                   \n                                    <Form.Group controlId='Department'>\n                                    <Form.Label>Department</Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        name=\"department\"\n                                        required\n                                        defaultValue={this.props.dep}\n\n                                        placeholder=\"Gender\"\n                                    />\n                                </Form.Group>\n\n                                    <Form.Group controlId='DepartmentSalary'>\n                                        <Form.Label>Salary</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            name=\"salary\"\n                                            required\n                                            defaultValue={this.props.sal}\n\n                                            placeholder=\"Salary\"\n                                        />\n                                    </Form.Group>\n\n                                    <Form.Group controlId='DepartmentResume'>\n                                        <Form.Label>Resume</Form.Label>\n                                        <Form.Control\n                                            type=\"file\"\n                                            name=\"resume\"\n                                            required\n                                            defaultValue={this.props.file}\n                                            placeholder=\"Resume\"\n                                        />\n                                    </Form.Group>\n\n                                    <Form.Group>\n                                        <Button variant=\"primary\" type=\"submit\">Update</Button>\n                                    </Form.Group>\n                                </Form>\n                            </Col>\n                        </Row>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Button, ButtonToolbar } from 'react-bootstrap';\n\nimport { AddDeptModal } from './AddDeptModal';\nimport { EditDeptModal } from './EditDeptModal'\nimport { Table } from 'react-bootstrap'\nexport class Department extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { dept: [], addModalShow: false, editModalShow: false };\n    }\n    componentDidMount() {\n        this.refreshList();\n    }\n    refreshList = () => {\n        axios.get('https://ntycrudapp.herokuapp.com/list')\n            .then(response => {\n                this.setState({ dept: response.data })\n\n            })\n            .catch(error => {\n                console.log(error);\n            });\n        // this.setState({\n        //     dept: [\n        //         { \"departmentID\": 1, \"departmentName\": 'IT' },\n        //         { \"departmentID\": 2, \"departmentName\": 'HR' },\n        //         { \"departmentID\": 3, \"departmentName\": 'Sales' },\n        //         { \"departmentID\": 4, \"departmentName\": 'WEB' },\n        //         { \"departmentID\": 5, \"departmentName\": 'Hardware' },\n\n        //     ]\n        // })\n    }\n    componentDidUpdate() {\n        this.refreshList();\n    }\n\n    deleteDepartment(deptId) {\n        console.log(\"deptId\",deptId);\n        if (window.confirm('Are you sure?')) {\n            fetch(`https://ntycrudapp.herokuapp.com/delete?_id=${deptId}`, {\n                method: 'DELETE',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n            })\n        }\n\n    }\n    render() {\n\n        const { dept, id, name,dob,gender,dep, sal,file} = this.state;\n        let addModalClose = () => this.setState({ addModalShow: false })\n        let editModalClose = () => this.setState({ editModalShow: false })\n        return (\n\n           \n            <div>\n                <Table className='mt-4' striped bordered hover size='sm'>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Date Of Birth</th>\n                            <th>Gender</th>\n                            <th>Department</th>\n                            <th>Salary</th>\n                            <th>Resume</th>\n                            <th>Options</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {dept.map((dep) =>\n                            <tr key={dep._id}>\n                                <td>{dep.name}</td>\n                                <td>{dep.dateOfBirth}</td>\n                                <td>{dep.sex}</td>\n                                <td>{dep.department}</td>\n                                <td>{dep.salary}</td>\n                                <td>{dep.resume}</td>\n                                <td><ButtonToolbar>\n                                    <Button className=\"mr-2\" variant='info' onClick={() => this.setState({ editModalShow: true, })}>Edit\n                                </Button>\n                                <Button className=\"mr-2\" variant='danger' onClick={() => this.deleteDepartment(dep._id)}>Delete\n                                </Button>\n                                    <EditDeptModal show={this.state.editModalShow}\n                                        onHide={editModalClose}\n                                        id={dep._id}\n                                        name={dep.name}\n                                        dob={dep.dateOfBirth}\n                                        gender={dep.sex}\n                                        dep={dep.department}\n                                       sal={dep.salary}\n                                    />\n                                </ButtonToolbar></td>\n                            </tr>\n                        )}\n                    </tbody>\n                </Table>\n                <ButtonToolbar>\n                    <Button variant=\"primary\" onClick={() => this.setState({ addModalShow: true })}>\n                        Add New Record\n            </Button>\n                    <AddDeptModal\n                        show={this.state.addModalShow}\n                        onHide={addModalClose}\n                    />\n                </ButtonToolbar>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom'\nimport { Navbar, Nav } from 'react-bootstrap';\n\nexport class Navigation extends Component {\n    render() {\n        return (\n            <Navbar bg='dark' extends='lg'>\n                <Navbar.Toggle aria-controls='basic-navbar-nav' />\n                <Navbar.Collapse id='basic-navbar-nav'>\n                    <Nav>\n                        <NavLink className='d-inline p-2 bg-dark text-white'\n                            to='/ntyFrontAppReact'> Home</NavLink>\n                        <NavLink className='d-inline p-2 bg-dark text-white'\n                            to='/employee'> Employee </NavLink>\n                       \n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport { Home } from './components/Home'\nimport { Department } from './components/Department'\nimport { Navigation } from './components/Navigation'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <h3 className=\"m-3 d-flex justify-content-center\">\n          MERN Stack CRUD Application\n      </h3>\n        <h5 className=\"m-3 d-flex justify-content-center\">\n          Employee Managment System\n      </h5>\n        <Navigation />\n        <Switch>\n          <Route path=\"/ntyFrontAppReact\" component={Home}  />\n          <Route path=\"/employee\" component={Department} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}